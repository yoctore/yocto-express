/* yocto-express - Manage express setup for an node js app. - V3.0.0 */

"use strict";var df=require("dateformat"),uuid=require("uuid"),_=require("lodash"),logger=require("yocto-logger"),express=require("express"),compression=require("compression"),path=require("path"),consolidate=require("consolidate"),favicon=require("serve-favicon"),cookieParser=require("cookie-parser"),bodyParser=require("body-parser"),utils=require("yocto-utils"),session=require("express-session"),multipart=require("connect-multiparty"),lusca=require("lusca"),Q=require("q"),MongoStore=require("connect-mongo")(session),prerender=require("prerender-node"),cors=require("cors"),https=require("https"),joi=require("joi"),url=require("url"),async=require("async"),yoctoJwt=require("yocto-jwt"),fs=require("fs-extra"),config=require("yocto-config");function Express(e,s){this.DEFAULT_APP_NAME=["app-#",uuid.v4(),"-",df(new Date,"yyyymd")].join(""),this.app=express(),this.logger=s,this.config=e,this.state=!1}Express.prototype.getSettings=function(){return this.app.settings||{}},Express.prototype.getApp=function(){return this.app},Express.prototype.processBase=function(){if(!this.isReady())return this.logger.error("[ Express.processBase ] - Cannot process config. App is not ready."),!1;if(_.has(this.config.get("config"),"app")&&_.has(this.config.get("config"),"env")&&_.has(this.config.get("config"),"host")&&_.has(this.config.get("config"),"protocol")){this.app.set("app_name",_.words(this.config.get("config").app.name.toLowerCase()).join("-")),this.logger.info(["[ Express.processBase ] - Setting app name to [",this.app.get("app_name"),"]"].join(" ")),this.app.set("env",this.config.get("config").env),this.logger.info(["[ Express.processBase ] - Setting env to [",this.app.get("env"),"]"].join(" ")),this.app.set("host",this.config.get("config").host),this.logger.info(["[ Express.processBase ] - Setting host to [",this.app.get("host"),"]"].join(" ")),this.app.set("protocol",this.config.get("config").protocol.type||"http"),this.logger.info(["[ Express.processBase ] - Setting protocol to [",this.app.get("protocol"),"]"].join(" "));var e=this.config.get("config").protocol.port||3e3;if(this.app.set("port",e),this.logger.info(["[ Express.processBase ] - Setting port to [",e,"]"].join(" ")),"https"===this.app.get("protocol")){var s=this.config.get("config").protocol.certificate.key,r=this.config.get("config").protocol.certificate.cert;s=path.isAbsolute(s)?s:path.normalize([process.cwd(),s].join("/")),r=path.isAbsolute(r)?r:path.normalize([process.cwd(),r].join("/"));var o={key:fs.readFileSync(s,"utf8"),cert:fs.readFileSync(r,"utf8")};this.app.listen=function(){var e=https.createServer(o,this);return e.listen.apply(e,arguments)}.bind(this.app)}return!0}return!1},Express.prototype.processStackError=function(){if(!this.isReady())return this.logger.error(["[ Express.processStackError ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").app.stackError||!0;return this.app.set("showStackError",e),this.logger.info(["[ Express.enableStackError ] -",e?"Enabling":"Disabling","showStackError"].join(" ")),!0},Express.prototype.processPrettyHTML=function(){if(!this.isReady())return this.logger.error(["[ Express.processPrettyHTML ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express.prettyHTML||!0;return this.app.locals.pretty=e,this.logger.info(["[ Express.processPrettyHTML] -",e?"Enabling":"Disabling","pretty HTML"].join(" ")),!0},Express.prototype.processViewEngine=function(){if(!this.isReady())return this.logger.error(["[ Express.processViewEngine ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express.viewEngine||"jade";return this.app.engine(e,consolidate[e]),this.app.set("view engine",e),this.logger.info(["[ Express.processViewEngine ] - Setting view engine to [",this.app.get("view engine"),"]"].join(" ")),!0},Express.prototype.processDirectory=function(){if(!this.isReady())return this.logger.error(["[ Express.processDirectory ] -","Cannot process config. App is not ready."].join("")),!1;var e=this.config.get("config").directory;return _.each(e,function(e){this.useDirectory(_.first(Object.keys(e)))}.bind(this)),!0},Express.prototype.processFavicon=function(){if(!this.isReady())return this.logger.error(["[ Express.processFavicon ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.ICONS_DIRECTORY;path.isAbsolute(e)||(e=path.normalize([process.cwd(),e].join("/")));var s=[e,"favicon.ico"].join("/");return fs.existsSync(s)?(this.logger.info(["[ Express.useFavicon ] - Adding favicon : ",s].join(" ")),this.app.use(favicon(s,{maxAge:2592e6}))):this.logger.warning(["[ Express.useFavicon ] - Favicon doesn't exist.","Checking path [",s,"] failed"].join(" ")),!0},Express.prototype.processCompression=function(){if(!this.isReady())return this.logger.error(["[ Express.processCompression ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express;if(!_.isUndefined(e.filter)){var s=e.filter||{};_.isString(s.rules)&&_.isString(s.by)&&_.isNumber(s.level)&&(this.logger.info(["[ Express.processCompression ] -","Setting up compression rules with filter [",s.rules,"] for [",s.by,"] at level [",_.parseInt(s.level),"]"].join(" ")),this.app.use(compression({filter:function(e,r){return(!_.has(e,"headers")||!e.headers["x-no-compression"])&&new RegExp(s.rules).test(r.getHeader(s.by))},level:_.parseInt(s.level)})))}return!0},Express.prototype.processJsonCallack=function(){if(!this.isReady())return this.logger.error(["[ Express.processJsonCallack ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express.jsonp;return this.logger[e?"info":"warning"](["[ Express.processJsonCallack ] -",e?"Enable":"Disable","JSONP for express"].join(" ")),this.app.enable("jsonp callback",e),!0},Express.prototype.processCookieParser=function(){if(!this.isReady())return this.logger.error(["[ Express.processCookieParser ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express.cookieParser;return this.logger[e.enable?"info":"warning"](["[ Express.processCookieParser ] -",e.enable?"Enable":"Disable","cookieParser"].join(" ")),e.enable&&this.app.use(cookieParser(e.secret,e.options)),!0},Express.prototype.processBodyParser=function(){if(!this.isReady())return this.logger.error(["[ Express.processBodyParser ] -","Cannot process config. App is not ready."].join(" ")),!1;return _.each(["json","urlencoded"],function(e){var s=this.config.get("config").express[e];this.logger.info(["[ Express.configure.processBodyParser ] - Setting up [",e,"] parser"].join(" ")),this.logger.debug(["[ Express.configure.processBodyParser ] - Used params for [",e,"] config are :",utils.obj.inspect(s)].join(" ")),this.app.use(bodyParser[e](s))}.bind(this)),!0},Express.prototype.processMethodOverride=function(){if(!this.isReady())return this.logger.error(["[ Express.processMethodOverride ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express.methodOverride;return _.each(e,function(e){this.logger.info(["[ Express.processMethodOverride ] - Setting up methodOverride to use [",e,"] header rules"].join(" "))}.bind(this)),!0},Express.prototype.processSession=function(){if(!this.isReady())return this.logger.error(["[ Express.processSession ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express.session;if(e.enable&&e.options.genuuid){delete e.options.genuuid,_.extend(e.options,{genid:function(){return uuid.v4()}})}e.options.proxy&&(this.logger.info("[ Express.processSession ] - Enable proxy trust for current express app"),this.app.set("trust proxy",1));var s=_.clone(e.options.store);if(delete e.options.store,!_.isUndefined(s)){var r=s.instance||"mongo",o=s.type||"uri";"mongo"===r&&"uri"===o&&_.isString(s.uri)&&!_.isEmpty(s.uri)?(_.has(s.options,"server.sslCA")&&_.isString(s.options.server.sslCA)&&(s.options.server.sslCA=[fs.readFileSync(path.normalize(process.cwd()+"/"+s.options.server.sslCA))]),_.has(s.options,"server.sslKey")&&_.isString(s.options.server.sslKey)&&(s.options.server.sslKey=fs.readFileSync(path.normalize(process.cwd()+"/"+s.options.server.sslKey))),_.has(s.options,"server.sslCert")&&_.isString(s.options.server.sslCert)&&(s.options.server.sslCert=fs.readFileSync(path.normalize(process.cwd()+"/"+s.options.server.sslCert))),_.extend(e.options,{store:new MongoStore({url:s.uri,mongoOptions:s.options||{}})})):this.logger.warning(["[ Express.processSession ] -","Session storage rules given is not an uri type.","Need to implement",o,"process"].join(" "))}this.logger.info(["[ Express.processSession ] -","Setting up expression session middleware support for current express app"].join(" ")),this.logger.debug(["[ Express.processSession ] -","Config data used for session setting are : ",utils.obj.inspect(e.options)].join(" "));var i=session(e.options);return this.app.use(i),this.app.set("session",i),!0},Express.prototype.processMultipart=function(){return this.isReady()?(this.config.get("config").express.multipart&&(this.logger.info(["[ Express.processMultipart ] -","Setting up multipart support for current express app"].join(" ")),this.app.use(multipart())),!0):(this.logger.error(["[ Express.processMultipart ] -","Cannot process config. App is not ready."].join(" ")),!1)},Express.prototype.processSecurity=function(){if(!this.isReady())return this.logger.error(["[ Express.processSecurity ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").express.security;return e.enable&&_.each(Object.keys(_.omit(e,["enable"])),function(s){_.isEmpty(s)||"csrf"===s||(this.logger.info(["[ Express.processSecurity ] - Setting up [",s.toUpperCase(),"] rules for current express app"].join(" ")),this.logger.debug(["[ Express.processSecurity ] - Config data used for",s.toUpperCase(),"setting are : ",utils.obj.inspect(e[s])].join(" ")),"nosniff"!==s?this.app.use(lusca[s](e[s])):_.isBoolean(e[s])&&this.app.use(lusca[s]()))}.bind(this)),!0},Express.prototype.processPrerender=function(){if(!this.isReady())return this.logger.error(["[ Express.processPrerender ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").prerender,s=!1;if(_.isUndefined(e))this.logger.info("[ Express.processPrerender ] - nothing to process prerender is disabled.");else{if(prerender.set("beforeRender",function(e,s){var r=utils.request.getHost(e);_.isString(r)&&(r=r.replace("http://",""),e.headers.host=r),s()}),_.has(e,"prerenderToken")&&(prerender.set("prerenderToken",e.prerenderToken),this.logger.debug(["[ Express.processPrerender ] - Add token :",e.prerenderToken,"for prerender service"].join(" ")),s=!0),_.has(e,"prerenderServiceUrl")&&(prerender.set("prerenderServiceUrl",e.prerenderServiceUrl),this.logger.debug(["[ Express.processPrerender ] - Add service url :",e.prerenderServiceUrl,"for prerender service"].join(" ")),s=!0),_.has(e,"blacklisted")&&(prerender.blacklisted(e.blacklisted),this.logger.debug(["[ Express.processPrerender ] - Add blacklist rules :",utils.obj.inspect(e.blacklisted),"for prerender service"].join(" "))),_.has(e,"additionalAgents")&&_.each(e.additionalAgents,function(e){prerender.crawlerUserAgents.push(e)}),!s)return this.logger.warning(["[ Express.processPrerender ] -","Setup failed. token or service url is missing"].join(" ")),!1;this.logger.info("[ Express.processPrerender ] - Setting up on express."),this.app.use(prerender)}return!0},Express.prototype.processJwt=function(){var e=Q.defer();this.isReady()||(this.logger.error(["[ Express.processJwt ] -","Cannot process config. App is not ready."].join(" ")),e.reject());var s=this.config.get("config").jwt,r=yoctoJwt(this.logger);return _.isBoolean(s.enable)&&s.enable&&_.isString(s.key)&&!_.isEmpty(s.key)?(this.logger.debug("[ Express.processJwt ] - Try to process jwt key"),r.algorithm(s.algorithm||"HS256"),r.load().then(function(){r.allowedIps(s.ips||[]),r.addAllowedRoutes(s.allowedRoutes||[]),r.setKey(s.key)&&(this.app.use(r.isAuthorized()),this.logger.info("[ Express.processJwt ] - Check json request autorization enabled."),s.autoEncryptRequest&&(this.app.use(r.autoEncryptRequest()),this.logger.info("[ Express.processJwt ] - Auto encrypt json response enabled.")),s.autoDecryptRequest&&(this.app.use(r.autoDecryptRequest()),this.logger.info("[ Express.processJwt ] - Auto decrypt json request enabled.")),this.app.set("jwt",r),e.resolve())}.bind(this)).catch(function(s){this.logger.error(s),e.reject(s)}.bind(this))):(this.logger.info("[ Express.processJwt ] - Nothing to process. jwt is disabled."),e.resolve()),e.promise},Express.prototype.processCors=function(){if(!this.isReady())return this.logger.error(["[ Express.processCors ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").cors,s=this.config.get("config").corsCfg;return _.isBoolean(e)&&e?(this.logger.debug("[ Express.processCors ] - Try to enable CORS on app."),_.isObject(s)&&!_.isEmpty(s)?(this.logger.debug(["[ Express.processCors ] - CORS is enabled with a custom config :",utils.obj.inspect(s)].join(" ")),this.app.use(cors(s))):this.app.use(cors()),this.logger.info("[ Express.processCors ] - CORS is enable for all routes.")):this.logger.info("[ Express.processCors ] - Nothing to process. CORS is disabled."),!0},Express.prototype.processRedirect=function(){if(!this.isReady())return this.logger.error(["[ Express.processRedirect ] -","Cannot process config. App is not ready."].join(" ")),!1;var e=this.config.get("config").redirect;return e&&(this.logger.info("[ Express.processRedirect ] - redirect rules are defined, processs it ..."),e.www&&(this.logger.info("[ Express.processRedirect ] - Enable 301 www redirection ..."),this.app.use(function(e,s,r){var o=utils.request.getHost(e);if(!_.startsWith(o,"www."))return s.redirect(301,[e.protocol,"://www.",o,e.originalUrl].join(""));r()})),_.has(e,"seo")&&_.isArray(e.seo)&&!_.isEmpty(e.seo)&&(this.logger.info("[ Express.processRedirect ] - enable redirect for custom url"),this.app.use(function(s,r,o){var i=utils.request.getHost(s),t=joi.object().required().keys({code:joi.number().required().valid([301,302]),fromUrl:joi.string().required().empty(),toUrl:joi.string().required().empty(),queryString:joi.boolean().optional().default(!1)}),n=_.find(e.seo,function(e){return e.fromUrl===s.originalUrl});if(!_.isUndefined(n)){var p=joi.validate(n,t);if(_.isNull(p.error)){var a=url.parse(p.value.fromUrl),c=[s.protocol,"://",i,p.value.toUrl].join("");if((_.startsWith(p.value.toUrl,"http")||_.startsWith(p.value.toUrl,"https"))&&(c=p.value.toUrl),p.value.queryString&&!_.isNull(a.query)){var g=url.parse(c);_.isNull(g.path)&&!_.endsWith(g.href,"/")&&(c=[c,"/"].join("")),c=[c,a.query].join("?")}return r.redirect(p.value.code,c)}}o()}))),!0},Express.prototype.isReady=function(){return this.state&&this.config.state},Express.prototype.configureWithoutLoad=function(e,s){var r=Q.defer();(s=!!_.isBoolean(s)&&s)&&(this.config=e,this.state=!0);var o=[];return async.each([{name:"processBase",exception:"Express base initialisation failed.",banner:!1},{name:"processStackError",exception:"Stack error setup failed.",banner:!1},{name:"processPrettyHTML",exception:"Pretty HTTML setup failed.",banner:!1},{name:"processViewEngine",exception:"View engine setup failed.",banner:!1},{name:"processCompression",exception:"Compression setup failed",banner:!1},{name:"processDirectory",exception:"Directory setup failed.",banner:!1},{name:"processFavicon",exception:"Favicon setup failed.",banner:!1},{name:"processJsonCallack",exception:"JsonCallback setup failed.",banner:!1},{name:"processCookieParser",exception:"CookieParser setup failed.",banner:!1},{name:"processBodyParser",exception:"BodyParser setup failed.",banner:!1},{name:"processMethodOverride",exception:"MethodOverride setup failed.",banner:!1},{name:"processSession",exception:"Session setup failed.",banner:!1},{name:"processMultipart",exception:"Multipart setup failed.",banner:!1},{name:"processRedirect",exception:"Redirect setup failed.",banner:!1},{name:"",exception:"Processing security rules",banner:!0},{name:"processSecurity",exception:"Security setup failed.",banner:!1},{name:"processCors",exception:"Cors setup failed.",banner:!1},{name:"",exception:"Setting up Seo renderer system",banner:!0},{name:"processPrerender",exception:"Prerender setup failed.",banner:!1},{name:"",exception:"Setting up Jwt crypt/decrypt",banner:!0}],function(e,s){e.banner||_.isEmpty(e.name)?this.logger.banner(["[ Express.configure ] - Initializing Express >",e.exception,"..."].join(" ")):this[e.name](this)||o.push(e.exception),s()}.bind(this),function(){_.isEmpty(o)?this.processJwt().then(function(){this.logger.banner("[ Express.configure ] - Setting up Router for current express app"),this.app.use(express.Router()),this.logger.info("[ Express.configure ] - Express is ready to use ...."),r.resolve(this.app)}.bind(this)).catch(function(e){r.reject(["Jwt setup failed.",e].join(" "))}):(this.logger.error(["[ Express.configure ] - Initializing Express Failed. Errors occured :\n",_.map(o,function(e){return[_.repeat("\t",4)," |---\x3e",e,"\n"].join(" ")}).join("")].join(" ")),r.reject(o))}.bind(this)),r.promise},Express.prototype.configure=function(){var e=Q.defer();return this.logger.banner("[ Express.configure ] - Initializing Express ..."),this.config.load().then(function(s){this.state=_.isObject(s)&&!_.isEmpty(s),this.configureWithoutLoad(s).then(function(s){e.resolve(s)}).catch(function(s){e.reject(s)})}.bind(this)).catch(function(s){this.logger.error("Invalid config given. Please check your config files"),e.reject(s)}.bind(this)),e.promise},Express.prototype.useDirectory=function(e,s){if(_.isString(e)&&!_.isEmpty(e)){if(s=_.isString(s)&&!_.isEmpty(s)?s:this.config[[e,"DIRECTORY"].join("_").toUpperCase()]||e,path.isAbsolute(s)||(s=path.normalize([process.cwd(),s].join("/"))),fs.existsSync(s))return this.logger.info(["[ Express.useDirectory ] - Adding directory",s,"on express app"].join(" ")),"views"!==e?this.app.use(express.static(s,this.config.get("config").express.staticServe)):this.app.set(e,s),!0;this.logger.warning(["[ Express.useDirectory ] - Cannot add directory",e,"on express app. Directory [",s,"] does not exist"].join(" "))}return!1},Express.prototype.removeMiddleware=function(e){var s=!1,r=_.findIndex(_.get(this.app,"_router.stack"),"name",e);return r>=0&&(_.get(this.app,"_router.stack").splice(r,1),s=!0),this.logger[s?"info":"warning"](["[ Express.removeMiddleware ] -","removing middleware",e,s?"success":"failed. Middleware does not exist"].join(" ")),s},Express.prototype.set=function(e,s){return _.isUndefined(e)||!_.isString(e)||_.isEmpty(e)?this.logger.warning(["[ Express.set ] - Invalid value given.","name must be a string and not empty. Operation aborted !"].join(" ")):this[e]=s,this},module.exports=function(e,s){return(_.isUndefined(s)||_.isNull(s))&&(logger.warning("[ Express.constructor ] - Invalid logger given. Use internal logger"),s=logger),(_.isUndefined(e)||_.isNull(e))&&(logger.warning("[ Express.constructor ] - Invalid config given. Use internal config"),(e=config(s)).enableExpress()),new Express(e,s)};